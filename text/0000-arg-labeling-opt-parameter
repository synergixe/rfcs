- Start Date: 2019-04-25
- RFC PR: 
- simple-lang Issue: 

# Overload Parameter Names as Argument Labels (for Controlling Optional Arguments)

## Summary

> The current standing of simple lang is that for function blocks (standalone or class), the parameter names are delineated in a sequence and have to be passed in such sequence as arguments during a call to such a function.
Synergixe hopes to sponsor an RFC that changes this slightly and adds the concept of Argument Labels (derived from Swift programming language) into the simple language.

## Motivation

> Why are we doing this? What use cases does it support? What is the expected
outcome?

## Detailed design

> This is the bulk of the RFC.

> Explain the design in enough detail for somebody familiar with the framework to understand, and for somebody familiar with the implementation to implement. This should get into specifics and corner-cases, and include examples of how the feature is used. Any new terminology should be defined here.

## How we teach this

> What names and terminology work best for these concepts and why? How is this idea best presented? As a continuation of existing simple-lang patterns, or as a wholly new one?

> Would the acceptance of this proposal mean the simple-lang guides must be re-organized or altered? Does it change how simple-lang is taught to new users at any level?

> How should this feature be introduced and taught to existing simple-lang users?

## Drawbacks

> Why should we *not* do this? Please consider the impact on teaching simple-lang,
on the integration of this feature with other existing and planned features,
on the impact of the API churn on existing apps, etc.

> There are tradeoffs to choosing any path, please attempt to identify them here.

## Alternatives

> What other designs have been considered? What is the impact of not doing this?

> This section could also include prior art, that is, how other frameworks in the same domain have solved this problem.

## Unresolved questions

> Optional, but suggested for first drafts. What parts of the design are still
TBD?
